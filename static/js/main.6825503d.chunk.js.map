{"version":3,"sources":["types/type.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","services/httpClients.ts","components/TodoModal/TodoModal.tsx","services/getUsers.ts","App.tsx","services/getTodos.ts","index.tsx"],"names":["TypeTodos","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","setTypeSelect","query","setQuery","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","length","style","pointerEvents","Loader","getData","url","fetch","then","response","json","TodoModal","useState","loaded","setLoaded","user","setUser","useEffect","userId","u","href","email","name","App","setTodos","isLoaded","setIsLoaded","typeSelect","visibleTodos","filter","fixQuery","toLowerCase","result","trim","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6825503d.chunk.js","sourcesContent":["export enum TypeTodos {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      {todos.map((todo) => (\n        <tbody>\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(todo.id !== selectedTodo?.id\n                    ? 'far fa-eye' : 'far fa-eye-slash')}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n        </tbody>\n      ))}\n    </table>\n  );\n};\n","import React from 'react';\nimport { TypeTodos } from '../../types/type';\n\ntype Props = {\n  setTypeSelect: (select: TypeTodos) => void\n  query: string\n  setQuery: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setTypeSelect,\n  query,\n  setQuery,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTypeSelect(event.target.value as TypeTodos);\n  };\n\n  const handleFindByQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\" onChange={handleFilterChange}>\n          <select data-cy=\"statusSelect\">\n            <option value={TypeTodos.ALL}>All</option>\n            <option value={TypeTodos.ACTIVE}>Active</option>\n            <option value={TypeTodos.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleFindByQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/';\n\nexport function getData<T>(url: string): Promise<T> {\n  return fetch(BASE_URL + url)\n    .then((response) => {\n      return response.json();\n    });\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUsers } from '../../services/getUsers';\n\ntype Props = {\n  todo: Todo\n  setSelectedTodo: (selectedTodo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoaded(true);\n    getUsers(todo.userId)\n      .then(u => {\n        setUser(u);\n        setLoaded(false);\n      });\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!todo.completed\n                ? (<strong className=\"has-text-danger\">Planned</strong>)\n                : (<strong className=\"has-text-success\">Done</strong>)}\n\n              {' by '}\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { getData } from './httpClients';\n\nexport function getUsers(id: number) {\n  return getData<User>(`users/${id}.json`);\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './services/getTodos';\nimport { TypeTodos } from './types/type';\n\nfunction getVisibleTodos(todos: Todo[], query: string, filter: TypeTodos) {\n  const fixQuery = query.toLowerCase();\n  let result = [...todos];\n\n  if (filter) {\n    result = result.filter(todo => {\n      switch (filter) {\n        case TypeTodos.ACTIVE:\n          return !todo.completed;\n        case TypeTodos.COMPLETED:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (query.trim()) {\n    result = result.filter(todo => todo.title.toLowerCase().includes(fixQuery));\n  }\n\n  return result;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [typeSelect, setTypeSelect] = useState<TypeTodos>(TypeTodos.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoaded(true);\n    getTodos()\n      .then(todo => {\n        setTodos(todo);\n        setIsLoaded(false);\n      });\n  }, []);\n\n  const visibleTodos = getVisibleTodos(todos, query, typeSelect);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            {isLoaded && <Loader />}\n            <div className=\"block\">\n              <TodoFilter\n                setTypeSelect={setTypeSelect}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { getData } from './httpClients';\n\nexport function getTodos() {\n  return getData<Todo[]>('todos.json')\n    .then(todos => todos);\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}